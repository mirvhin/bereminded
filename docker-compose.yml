version: "3.5"
services:
  postgres:
    image: postgres
    hostname: $POSTGRES_HOST
    restart: unless-stopped
    env_file: ./.env
    environment:
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_DB=$POSTGRES_DB
    container_name: $POSTGRES_HOST
    volumes:
      - ./local_pgdata:/var/lib/postgresql/data
    ports:
      - "$POSTGRES_PORT:5432"

  pgadmin:
    image: dpage/pgadmin4
    restart: unless-stopped
    container_name: bereminded-pgadmin4
    env_file: ./.env
    environment:
      - PGADMIN_DEFAULT_EMAIL=$PGADMIN_DEFAULT_EMAIL
      - PGADMIN_DEFAULT_PASSWORD=$PGADMIN_DEFAULT_PASSWORD
    ports:
      - "$PGADMIN_PORT:80"
    depends_on:
      - postgres
    volumes:
      - ./pgadmin-data:/var/lib/pgadmin

  springboot-graphql-server:
    build:
      context: .
      dockerfile: ./springboot-graphql-server/Dockerfile
    container_name: springboot-graphql-server
    restart: unless-stopped
    ports:
      - "8082:8082"
    depends_on:
      - postgres
    volumes:
      - ./springboot-graphql-server/:/app/

  web:
    build:
      context: .
      dockerfile: ./flutter_app/Dockerfile
    restart: unless-stopped
    container_name: flutter-app
    ports:
      - "8081:80"
    depends_on:
      - springboot-graphql-server
    volumes:
      - ./flutter_app/:/app/

volumes:
  local_pgdata:
  pgadmin-data:
  postgres-db: